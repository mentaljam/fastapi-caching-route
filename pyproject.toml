[project]
name = "fastapi-caching-route"
description = "FastAPI route for efficient caching."
authors = [{name = "Petr Tsymbarovich", email = "petr@tsymbarovich.ru"}]
readme = "README.md"
requires-python = ">=3.8"
dynamic = ["version"]
classifiers = [
    "License :: OSI Approved :: MIT License",
]

dependencies = [
    "aiocache>=0.12,<1.0",
]

[project.urls]
Homepage = "https://github.com/mentaljam/fastapi-caching-route"
Repository = "https://github.com/mentaljam/fastapi-caching-route.git"
Issues = "https://github.com/mentaljam/fastapi-caching-route/issues"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.rye]
managed = true
universal = true
dev-dependencies = [
    "coverage[toml]~=7.5",
    "fastapi-slim>=0.112.3,<1.0",
    "httpx~=0.27",
    "mypy~=1.7",
    "pytest~=8.2",
    "uvicorn[standard]~=0.30",
    "griffe-typingdoc~=0.2",
    "markdown-include~=0.8",
    "mkdocs~=1.5",
    "mkdocs-material~=9.5",
    "mkdocstrings[python]~=0.25"
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py312"
line-length = 100
show-fixes = true
output-format = "full"

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN101", "ANN401", "D107", "D105", "PLR0913",
    "COM812", "ISC001", "Q000", "Q003",  # Handled by ruff format
]

[tool.ruff.lint.isort]
lines-after-imports = 2
combine-as-imports = true
known-local-folder = ["examples"]

[tool.ruff.lint.flake8-quotes]
multiline-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[[tool.mypy.overrides]]
module = ["aiocache.*"]
ignore_missing_imports = true

[tool.coverage.run]
source_pkgs = ["fastapi_caching_route"]

[tool.coverage.report]
exclude_also = [
    "if\\s+(typing\\.)?TYPE_CHECKING:",
]
